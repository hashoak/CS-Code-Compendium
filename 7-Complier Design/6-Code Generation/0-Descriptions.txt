Program a:
Write a program to generate the three-address code for the following code of ‘if-else’. 

Sample Input:
input.txt 
X = 1; 
Y = 2; 
if (X>Y) 
return 1; 
else 
return 0; 
 
O/P: Three – address code



Program b:
Every compiler has intermediate code representation phase. Consider the given the set of 
expression:
x=-(a*b)+(c+d)-(a+b+c+d) 
Write a CPP program to find three address code using quadruples and triples of the given 
expression for intermediate code representation.

Sample Input: 
Given expression: a = b * -c + b * -c 

O/P:
Three Address code         
Triples
Quadruples



Program c:
Implementation of Backend, converting infix expression to quadruple and machine instructions 

Sample Input:
Enter the infix expression: (a+b) *(a-b) 

Sample Output:
Postfix Expression: ab+ab-* 
Quadruple table:
Ref Operator Arg1 Agr2 Results 
0   +        a    b    t1
1   -        a    b    t2
2   *        t1   t2   t3
Machine instructions:
MOV R0, a 
MOV R1, b 
ADD R2, R0, R1 
MOV R3, a 
MOV R4, b 
SUB R5, R3, R4 
MUL R6, R2, R5
